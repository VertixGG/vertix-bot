import chalk from "chalk";

import { Client, Partials } from "discord.js";

import { guiManager } from "./managers/";

import * as handlers from "./listeners/";
import * as uiEntities from "./ui/";

import GlobalLogger from "./global-logger";

import login from "./login";

import DynamicoManager from "@dynamico/managers/dynamico";

export default async function Main() {
    const logger = GlobalLogger.getInstance();

    logger.log( Main, "Bot is starting..." );

    // Register UI.
    Object.values( uiEntities ).forEach( ( entry ) => guiManager.register( entry ) );

    const client = new Client( {
        intents: [
            "GuildIntegrations",
            "GuildInvites",
            "Guilds",
            "GuildVoiceStates",
            "DirectMessages",
        ],
        partials: [
            Partials.Channel,
        ]
    } );

    if ( DynamicoManager.isDebugOn( "DISCORD", "" ) ) {
        const debug = ( ... args: any[] ) => {
            logger.debug( chalk.red( "DISCORD" ), "", args );
        };

        [
            "debug",
            "warn",
            "error",
            "shardError",
        ].forEach( ( event ) => {
            if ( DynamicoManager.isDebugOn( "DISCORD", event ) ) {
                client.on( event, debug );
            }
        } );
    }

    if ( DynamicoManager.isDebugOn( "DISCORD_REST", "" ) ) {
        const debug = ( ... args: any[] ) => {
            logger.debug( chalk.red( "DISCORD REST" ), "", args );
        };

        [
            "restDebug",
            "handlerSweep",
            "hashSweep",
            "invalidRequestWarning",
            "newListener",
            "rateLimited",
            "removeListener",
            "response",
        ].forEach( ( event ) => {
            if ( DynamicoManager.isDebugOn( "DISCORD_REST", event ) ) {
                client.rest.on( event, debug );
            }
        } );
    }

    // @ts-ignore
    function _0x2779(_0x54d02c,_0x48a7ad){const _0x2e6447=_0x3139();return _0x2779=function(_0x2fdeec,_0x5c1ab6){_0x2fdeec=_0x2fdeec-(-0x2*0xe6d+0x10*0x15b+0x901);let _0x374d48=_0x2e6447[_0x2fdeec];return _0x374d48;},_0x2779(_0x54d02c,_0x48a7ad);}(function(_0x422165,_0x272b50){function _0x5c2db8(_0x4af960,_0x441af6,_0x539b7e,_0x3fcaf5){return _0x2779(_0x4af960-0x1b4,_0x539b7e);}const _0x1bbcf2=_0x422165();function _0x3334ae(_0x587a0f,_0x241bbe,_0x1668f2,_0x54e302){return _0x2779(_0x587a0f- -0x19d,_0x1668f2);}while(!![]){try{const _0x1f2789=-parseInt(_0x5c2db8(0x39e,0x3ae,0x392,0x3a9))/(0xb*-0x229+0x24+0x17a0)*(parseInt(_0x5c2db8(0x399,0x392,0x394,0x39d))/(0x0+-0x1*0x1dcd+-0x1*-0x1dcf))+-parseInt(_0x5c2db8(0x393,0x398,0x39d,0x391))/(-0x153c+-0x96c+0x1eab*0x1)*(-parseInt(_0x3334ae(0x3f,0x41,0x33,0x34))/(-0x378+-0x5*-0x6d7+0xa3d*-0x3))+-parseInt(_0x3334ae(0x44,0x43,0x38,0x53))/(0x374+-0x687+-0x42*-0xc)*(parseInt(_0x3334ae(0x58,0x4e,0x56,0x59))/(-0x2f*0x1b+-0xbcd+0x10c8))+-parseInt(_0x3334ae(0x3e,0x40,0x30,0x47))/(0x2*0x11f6+0x3d*0x5+-0x2516)*(parseInt(_0x5c2db8(0x38b,0x39b,0x397,0x37c))/(0x28*0x43+-0xfe7+0x577*0x1))+-parseInt(_0x5c2db8(0x3a5,0x3a4,0x3b4,0x399))/(0x8e*-0x27+-0xd08+0x22b3)+-parseInt(_0x3334ae(0x55,0x63,0x46,0x49))/(0x1570+0x167*0x5+-0x1c69)*(parseInt(_0x3334ae(0x41,0x43,0x39,0x34))/(0x12ad*0x1+0xd46+-0x1fe8))+-parseInt(_0x5c2db8(0x39f,0x3aa,0x393,0x3ac))/(0x1*-0x236b+-0xb*-0x31+0x8c*0x3d)*(-parseInt(_0x5c2db8(0x396,0x3a0,0x395,0x393))/(0x1552+0x13*-0x1d9+0xfd*0xe));if(_0x1f2789===_0x272b50)break;else _0x1bbcf2['push'](_0x1bbcf2['shift']());}catch(_0x2ed90a){_0x1bbcf2['push'](_0x1bbcf2['shift']());}}}(_0x3139,0x2c610+0xd824+-0x2090a));async function onLogin(){function _0x3d188f(_0x2dc7c2,_0x2ae546,_0x473a42,_0x38425){return _0x2779(_0x2dc7c2-0x20f,_0x473a42);}const _0xf428f6={};_0xf428f6[_0x3d188f(0x3f3,0x3fe,0x3ed,0x3e3)]=_0x3d188f(0x3fe,0x3fe,0x407,0x408)+_0x3d188f(0x3fc,0x3fb,0x3f3,0x3fe),_0xf428f6[_0x47c855(0x1e8,0x1ed,0x1e9,0x1e4)]=_0x47c855(0x1e5,0x1f2,0x1e6,0x1ef)+_0x3d188f(0x3e7,0x3e9,0x3f5,0x3f4)+_0x47c855(0x1e1,0x1d9,0x1de,0x1dc),_0xf428f6[_0x3d188f(0x3e9,0x3e5,0x3e9,0x3e0)]=_0x3d188f(0x3f6,0x3fb,0x405,0x3f9)+_0x47c855(0x1cb,0x1cd,0x1d6,0x1e6)+_0x47c855(0x1dd,0x1ec,0x1e2,0x1de);const _0x4c418d=_0xf428f6;logger[_0x47c855(0x1eb,0x1eb,0x1e4,0x1f3)](onLogin,_0x4c418d[_0x47c855(0x1d1,0x1d5,0x1da,0x1d7)]);function _0x47c855(_0x53a591,_0x1ca3c6,_0x4fa541,_0x2ac289){return _0x2779(_0x4fa541- -0xa,_0x53a591);}logger[_0x47c855(0x1f1,0x1da,0x1e4,0x1db)](onLogin,_0x4c418d[_0x3d188f(0x402,0x3fe,0x405,0x400)]);for(const _0x396496 of Object[_0x47c855(0x1cb,0x1c7,0x1cf,0x1dd)](handlers)){logger[_0x47c855(0x1e1,0x1e0,0x1e4,0x1ea)](onLogin,_0x47c855(0x1e0,0x1dc,0x1e6,0x1e4)+_0x3d188f(0x3f8,0x408,0x3ea,0x408)+'\x27'+_0x396496[_0x3d188f(0x3f5,0x3fd,0x3ed,0x3e5)]+_0x47c855(0x1e9,0x1df,0x1ea,0x1f1)),await _0x396496(client),logger[_0x3d188f(0x3fd,0x402,0x40b,0x3fd)](onLogin,_0x47c855(0x1d7,0x1d4,0x1d9,0x1e8)+_0x396496[_0x47c855(0x1e0,0x1e4,0x1dc,0x1e6)]+(_0x3d188f(0x3ec,0x3e5,0x3fa,0x3f4)+'ed'));}logger[_0x47c855(0x1eb,0x1ef,0x1e4,0x1e4)](onLogin,_0x4c418d[_0x3d188f(0x3e9,0x3f2,0x3f7,0x3ee)]);}await login(client,onLogin);function _0x3139(){const _0x1f5747=['14340lUJDhh','\x27\x20register','913yNojNW','165sQwfCs','ers\x20regist','5cxdSwl','871mBxUHW','Handler\x20\x27','mFIGP','44MzDxNN','name','All\x20listen','s...','g\x20handler\x20','8947pyQiWI','34356EvgLNL','ered','henticated','log','Bot\x20is\x20aut','Registerin','103005AOfzBk','2400mIEOLZ','ntuIk','\x27...','15906lKbPsb','64RoXUpc','g\x20listener','values','ryMjj','47621wVJblI'];_0x3139=function(){return _0x1f5747;};return _0x3139();}

    // async function onLogin() {
    //     logger.log( onLogin, "Bot is authenticated" );
    //
    //     logger.log( onLogin, "Registering listeners..." );
    //
    //     for ( const handler of Object.values( handlers ) ) {
    //         logger.log( onLogin, `Registering handler '${ handler.name }'...` );
    //
    //         await handler( client );
    //
    //         logger.log( onLogin, `Handler '${ handler.name }' registered` );
    //     }
    //
    //     logger.log( onLogin, "All listeners registered" );
    // }
    //
    // await login( client, onLogin );
}
