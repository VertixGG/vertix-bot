generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "mongodb"
  url      = env("PRISMA_DATABASE_URL")
}

enum E_INTERNAL_CHANNEL_TYPES {
  DEFAULT_CHANNEL
  DYNAMIC_CHANNEL
  MASTER_CREATE_CHANNEL
}

model Guild {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  // ---
  guildId   String      @unique
  name      String
  // ---
  isInGuild Boolean
  // ---
  data      GuildData[] @relation("GuildData")
  // ---
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Category {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  // ---
  name             String
  categoryId       String
  guildId          String
  // ---
  createdAtDiscord Int
  // ---
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Channel {
  id               String                   @id @default(auto()) @map("_id") @db.ObjectId
  channelId        String                   @unique
  // ---
  guildId          String
  userOwnerId      String
  // ---
  categoryId       String?
  ownerChannelId   String?
  // ---
  data             ChannelData[]            @relation("ChannelData")
  // ---
  internalType     E_INTERNAL_CHANNEL_TYPES @default(DEFAULT_CHANNEL)
  // ---
  createdAtDiscord Int
  // ---
  createdAt        DateTime                 @default(now())
  updatedAt        DateTime                 @updatedAt
}

model ChannelData {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  // ---
  key       String
  type      String   @default("default")
  // ---
  object    Json?
  values    String[]
  // ---
  ownerId   String   @db.ObjectId
  channel   Channel  @relation("ChannelData", fields: [ownerId], references: [id], onDelete: Cascade)
  // ---
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([ownerId, key])
}

model GuildData {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  // ---
  key       String
  type      String   @default("default")
  // ---
  object    Json?
  values    String[]
  // ---
  ownerId   String   @db.ObjectId
  guild     Guild    @relation("GuildData", fields: [ownerId], references: [id], onDelete: Cascade)
  // ---
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([ownerId, key])
}
